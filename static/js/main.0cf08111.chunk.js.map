{"version":3,"sources":["App.module.css","panels/StatusPanel.module.css","uiComponents/Switch.module.css","uiComponents/Panel.module.css","midi/midi$.js","midi/messages/properties.js","midi/messages/createMessageDefinition.js","midi/messages/noteOffMIDIMessage.js","midi/messages/noteOnMIDIMessage.js","midi/messages/unknownMIDIMessage.js","midi/messages/controlChangeMIDIMessage.js","midi/messages/programChangeMIDIMessage.js","midi/messages/pitchBendChangeMIDIMessage.js","midi/messages/index.js","midi/pressedKeys.js","midi/onlyMessageTypes.js","typedPackets.js","exercises/chords.js","intervals.js","TrainerController.js","midi/parse.js","controllerContext.js","useObservable.js","uiComponents/Panel.js","panels/MainPanel.js","Keyboard.js","panels/KeyboardPanel.js","uiComponents/Switch.js","panels/StatusPanel.js","App.js","useNewTrainerController.js","serviceWorker.js","index.js"],"names":["module","exports","midiInputs$","defer","navigator","requestMIDIAccess","pipe","switchMap","midiAccess","merge","from","inputs","values","fromEvent","map","e","port","filter","type","state","distinct","input","id","name","connected$","publishBehavior","refCount","distinctUntilChanged","messages$","createMessagesObservable","share","channel","get","this","event","data","key","velocity","createMessageDefinition","displayName","properties","matcher","Symbol","matches","create","Object","assign","toString","keys","propName","join","createPrototype","value","writable","noteOffMIDIMessage","noteOnMIDIMessage","unknownMIDIMessage","status","data1","data2","controlChangeMIDIMessage","controller","programChangeMIDIMessage","patch","pitchBendChangeMIDIMessage","pressedKeys","observable$","messageTypes","message","includes","onlyMessageTypes","scan","acc","add","delete","sort","OrderedSet","packType","unpackOfType","p","NOTE_NAMES","CHORD_TYPES","note","i","getChordNotes","rootNote","intervals","interval","getChordNotesRelativeToFirstNote","chord","chordNote","first","types","EXERCISE","RESULT","noSleep","NoSleep","wakeLockSubject","BehaviorSubject","subscribe","shouldBeLocked","enable","disable","allMidiInputNames$","mergeMap","connected","orderedSet","toArray","parsedMessages$","find","keyboardKeyState$","exercisesAndResults$","of","random","sample","getDisplayName","chordIntervalsFromRoot","List","chordNotes","getResult","flatMap","size","some","index","slice","isSuperset","createExercise","publish","exercise$","exercise","repeat","solutions$","setWakeLock","active","next","wakeLockActive$","ControllerContext","createContext","useObservable","useState","lastValue","setLastValue","useEffect","subscription","unsubscribe","Panel","children","className","classNames","panelStyles","panel","MainPanel","useContext","lastSolution","viewBox","width","height","preserveAspectRatio","x","y","dominantBaseline","textAnchor","style","fontSize","fill","KEY_X_OFFSETS","Keyboard","lowestKey","highestKey","keyState","version","getViewBox","offset","gradientUnits","x1","x2","y1","y2","xlinkHref","transform","clipPath","rx","ry","d","sortBy","range","isBlackKey","keyNumber","isPressed","has","Key","href","getXOffsetForKey","Math","floor","KeyboardPanel","keyboardKeyState","Switch","label","checked","onChange","styles","switch","target","StatusPanel","midiInputNames","wakeLockActive","statusPanel","midiInputs","length","wakeLock","App","setController","createdController","TrainerController","useNewTrainerController","Provider","app","middleRow","main","keyboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.0cf08111.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__PQN_E\",\"middleRow\":\"App_middleRow__sVF2U\",\"main\":\"App_main__26IeJ\",\"status\":\"App_status__3rE2Z\",\"keyboard\":\"App_keyboard__3n2bg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusPanel\":\"StatusPanel_statusPanel__3ZieZ\",\"midiInputs\":\"StatusPanel_midiInputs__2wQ-e\",\"wakeLock\":\"StatusPanel_wakeLock__I3Is8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Switch_switch__38k5d\",\"checked\":\"Switch_checked__2_Msb\",\"toggle\":\"Switch_toggle__HIeKe\",\"untoggle\":\"Switch_untoggle__21QGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Panel_panel__Mjifb\"};","import { fromEvent, from, defer, merge } from 'rxjs';\r\nimport { share, map, switchMap, filter, distinct, distinctUntilChanged, publishBehavior, refCount } from 'rxjs/operators';\r\n\r\nexport const midiInputs$ = defer(() => navigator.requestMIDIAccess()).pipe(\r\n  switchMap(midiAccess => merge(\r\n    from(midiAccess.inputs.values()),\r\n    fromEvent(midiAccess, 'statechange').pipe(\r\n      map(e => e.port),\r\n      filter(port => port.type === 'input' && port.state === 'connected'),\r\n    ),\r\n  ).pipe(\r\n    distinct(input => input.id),\r\n    map(input => ({\r\n      name: input.name,\r\n      connected$: fromEvent(midiAccess, 'statechange').pipe(\r\n        filter(e => e.port.id === input.id),\r\n        map(e => e.port.state === 'connected'),\r\n        publishBehavior(true),\r\n        refCount(),\r\n        distinctUntilChanged(),\r\n      ),\r\n      messages$: createMessagesObservable(input),\r\n    })),\r\n  )),\r\n  share(),\r\n);\r\n\r\nconst createMessagesObservable = input => fromEvent(input, 'midimessage').pipe(\r\n  share(),\r\n);\r\n","export const status = ({\r\n  get() {\r\n    return this.event.data[0];\r\n  },\r\n});\r\n\r\nexport const data1 = ({\r\n  get() {\r\n    return this.event.data[1];\r\n  },\r\n});\r\n\r\nexport const data2 = ({\r\n  get() {\r\n    return this.event.data[2];\r\n  },\r\n});\r\n\r\nexport const channel = ({\r\n  get() {\r\n    return (this.event.data[0] & 0b00001111) + 1;\r\n  },\r\n});\r\n\r\nexport const key = ({\r\n  get() {\r\n    return this.event.data[1] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const velocity = ({\r\n  get() {\r\n    return this.event.data[2] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const controller = ({\r\n  get() {\r\n    return this.event.data[1] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const value = ({\r\n  get() {\r\n    return this.event.data[2] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const patch = ({\r\n  get() {\r\n    return this.event.data[1] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const pitchBendValue = ({\r\n  get() {\r\n    return (this.event.data[1] & 0b01111111) | ((this.event.data[2] & 0b01111111) << 7);\r\n  },\r\n});\r\n","const createPrototype = (properties, displayName, type) => Object.assign(\r\n  Object.create(null, properties), {\r\n    type,\r\n    toString() {\r\n      return `${displayName} MIDI message (${Object.keys(properties).map(propName => `${propName}: ${this[propName]}`).join(', ')})`;\r\n    },\r\n  }\r\n);\r\n\r\nexport const createMessageDefinition = ({ displayName, properties, matcher }) => {\r\n  const type = Symbol(displayName);\r\n  return ({\r\n    type,\r\n    matches: matcher,\r\n    create: event => Object.create(createPrototype(properties, displayName, type), { event: { value: event, writable: false } }),\r\n  });\r\n};","import { channel, key, velocity } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const noteOffMIDIMessage = createMessageDefinition({\r\n  displayName: 'Note Off',\r\n  properties: { channel, key, velocity },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b10000000,\r\n});\r\n","import { channel, key, velocity } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const noteOnMIDIMessage = createMessageDefinition({\r\n  displayName: 'Note On',\r\n  properties: { channel, key, velocity },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b10010000,\r\n});\r\n","import { status, data1, data2 } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const unknownMIDIMessage = createMessageDefinition({\r\n  displayName: 'Unknown',\r\n  properties: { status, data1, data2 },\r\n  matcher: () => true,\r\n});\r\n","import { channel, controller, value } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const controlChangeMIDIMessage = createMessageDefinition({\r\n  displayName: 'Control Change',\r\n  properties: { channel, controller, value },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b10110000,\r\n});\r\n","import { channel, patch } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const programChangeMIDIMessage = createMessageDefinition({\r\n  displayName: 'Program Change',\r\n  properties: { channel, patch },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b11000000,\r\n});\r\n","import { channel, pitchBendValue } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const pitchBendChangeMIDIMessage = createMessageDefinition({\r\n  displayName: 'Pitch Bend Change',\r\n  properties: { channel, value: pitchBendValue },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b11100000,\r\n});\r\n","import { noteOffMIDIMessage } from './noteOffMIDIMessage';\r\nimport { noteOnMIDIMessage } from './noteOnMIDIMessage';\r\nimport { unknownMIDIMessage } from './unknownMIDIMessage';\r\nimport { controlChangeMIDIMessage } from './controlChangeMIDIMessage';\r\nimport { programChangeMIDIMessage } from './programChangeMIDIMessage';\r\nimport { pitchBendChangeMIDIMessage } from './pitchBendChangeMIDIMessage';\r\n\r\nexport default [\r\n  noteOffMIDIMessage,\r\n  noteOnMIDIMessage,\r\n  controlChangeMIDIMessage,\r\n  programChangeMIDIMessage,\r\n  pitchBendChangeMIDIMessage,\r\n  unknownMIDIMessage,\r\n];\r\n","import { scan } from 'rxjs/operators';\r\nimport { OrderedSet } from 'immutable';\r\nimport { noteOnMIDIMessage } from './messages/noteOnMIDIMessage';\r\nimport { noteOffMIDIMessage } from './messages/noteOffMIDIMessage';\r\nimport { onlyMessageTypes } from './onlyMessageTypes';\r\n\r\nexport const pressedKeys = () => observable$ => observable$.pipe(\r\n  onlyMessageTypes(noteOnMIDIMessage.type, noteOffMIDIMessage.type),  \r\n  scan(\r\n    (acc, message) => (message.type === noteOnMIDIMessage.type && message.velocity\r\n      ? acc.add(message.key)\r\n      : acc.delete(message.key)\r\n    ).sort(),\r\n    OrderedSet(),\r\n  ),\r\n);","import { filter } from 'rxjs/operators';\r\n\r\nexport const onlyMessageTypes = (...messageTypes) => filter(message => messageTypes.includes(message.type));","import { map, filter } from \"rxjs/operators\";\r\n\r\nexport const packType = type => map(value => ({ type, value }));\r\n\r\nexport const unpackOfType = type => observable$ => observable$.pipe(\r\n  filter(p => p.type === type),\r\n  map(p => p.value),\r\n);\r\n","import random from 'lodash.random';\r\nimport { List } from 'immutable';\r\nimport { first, flatMap } from 'rxjs/operators';\r\nimport { pressedKeys } from '../midi/pressedKeys';\r\nimport * as i from '../intervals';\r\nimport sample from 'lodash.sample';\r\n\r\nconst NOTE_NAMES = ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'F♯', 'G', 'A♭', 'A', 'B♭', 'B'];\r\n\r\nconst CHORD_TYPES = [\r\n  [note => `${note}m9 (A)`, [i.MINOR_3RD, i.PERFECT_5TH, i.MINOR_7TH, i.MAJOR_9TH]],\r\n  [note => `${note}m9 (B)`, [i.MINOR_7TH, i.MAJOR_9TH, i.OCTAVE + i.MINOR_3RD, i.OCTAVE + i.PERFECT_5TH]],\r\n  [note => `${note}maj9 (A)`, [i.MAJOR_3RD, i.PERFECT_5TH, i.MAJOR_7TH, i.MAJOR_9TH]],\r\n  [note => `${note}maj9 (B)`, [i.MAJOR_7TH, i.MAJOR_9TH, i.OCTAVE + i.MAJOR_3RD, i.OCTAVE + i.PERFECT_5TH]],\r\n  [note => `${note}13 (A)`, [i.MAJOR_3RD, i.MAJOR_13TH - i.OCTAVE, i.MINOR_7TH, i.MAJOR_9TH]],\r\n  [note => `${note}13 (B)`, [i.MINOR_7TH, i.MAJOR_9TH, i.OCTAVE + i.MAJOR_3RD, i.MAJOR_13TH]],\r\n];\r\n\r\nexport const createExercise = () => {\r\n  const rootNote = random(0, 11);\r\n  const [getDisplayName, intervals] = sample(CHORD_TYPES);\r\n  const chordIntervalsFromRoot = List(intervals).sort();\r\n  const chordNotes = getChordNotes(rootNote, chordIntervalsFromRoot);\r\n  \r\n  const getResult = parsedMessages$ => parsedMessages$.pipe(\r\n    pressedKeys(),\r\n    flatMap(\r\n      keys => {\r\n        if (!keys.size) {\r\n          return [];\r\n        }\r\n        if (!chordNotes.some((chordNote, index) =>\r\n          (chordNote % 12 === keys.first() % 12) &&\r\n          getChordNotesRelativeToFirstNote(chordNotes.slice(index)).isSuperset(getChordNotesRelativeToFirstNote(keys))\r\n        )) {\r\n          return [false];\r\n        }\r\n\r\n        if (chordNotes.size === keys.size) {\r\n          return [true];\r\n        }\r\n\r\n        return [];\r\n      }\r\n    ),\r\n    first(),\r\n  );\r\n\r\n  return {\r\n    displayName: getDisplayName(NOTE_NAMES[rootNote]),\r\n    getResult,\r\n  }\r\n};\r\n\r\nconst getChordNotes = (rootNote, intervals) => intervals.map(interval => rootNote + interval);\r\n\r\nconst getChordNotesRelativeToFirstNote = chord => chord.map(chordNote => chordNote - chord.first());\r\n","export const ROOT = 0;\r\nexport const MINOR_2ND = 1;\r\nexport const MAJOR_2ND = 2;\r\nexport const MINOR_3RD = 3;\r\nexport const MAJOR_3RD = 4;\r\nexport const PERFECT_4TH = 5;\r\nexport const AUGMENTED_4TH = 6;\r\nexport const DIMINISHED_5TH = 6;\r\nexport const PERFECT_5TH = 7;\r\nexport const MINOR_6TH = 8;\r\nexport const MAJOR_6TH = 9;\r\nexport const MINOR_7TH = 10;\r\nexport const MAJOR_7TH = 11;\r\nexport const OCTAVE = 12;\r\nexport const MINOR_9TH = 13;\r\nexport const MAJOR_9TH = 14;\r\nexport const MINOR_10TH = 15;\r\nexport const MAJOR_10TH = 16;\r\nexport const PERFECT_11TH = 17;\r\nexport const AUGMENTED_11TH = 18;\r\nexport const PERFECT_12TH = 19;\r\nexport const MINOR_13TH = 20;\r\nexport const MAJOR_13TH = 21;\r\nexport const MINOR_14TH = 22;\r\nexport const MAJOR_14TH = 23;\r\nexport const DOUBLE_OCTAVE = 24;\r\n","import { midiInputs$ } from './midi/midi$';\r\nimport { parse } from './midi/parse';\r\nimport { pressedKeys } from './midi/pressedKeys';\r\nimport { defer, of, merge, BehaviorSubject, from } from 'rxjs';\r\nimport { first, switchMap, share, repeat, publish, mergeMap, scan, map } from 'rxjs/operators';\r\nimport NoSleep from 'nosleep.js';\r\nimport { packType, unpackOfType } from './typedPackets';\r\nimport { createExercise } from './exercises/chords';\r\nimport { OrderedSet } from 'immutable';\r\n\r\nconst types = {\r\n  EXERCISE: Symbol('EXERCISE'),\r\n  RESULT: Symbol('RESULT'),\r\n};\r\n\r\nconst noSleep = new NoSleep();\r\n\r\nexport const create = () => {\r\n  const wakeLockSubject = new BehaviorSubject(false);\r\n  wakeLockSubject.subscribe((shouldBeLocked) => {\r\n    if (shouldBeLocked) {\r\n      noSleep.enable();\r\n    } else {\r\n      noSleep.disable();\r\n    }\r\n  })\r\n\r\n  const allMidiInputNames$ = midiInputs$.pipe(\r\n    mergeMap(input => input.connected$.pipe(map(connected => ({ input, connected })))),\r\n    scan((acc, { input, connected }) => connected ? acc.add(input.name) : acc.delete(input.name), OrderedSet()),\r\n    map(orderedSet => orderedSet.toArray()),\r\n  );\r\n  const midiMessages$ = midiInputs$.pipe(mergeMap(input => input.messages$), share());\r\n  const parsedMessages$ = midiMessages$.pipe(parse());\r\n  const keyboardKeyState$ = parsedMessages$.pipe(pressedKeys());\r\n\r\n  const singleExercise$ = defer(() => of(createExercise()));\r\n  const exercisesAndResults$ = singleExercise$.pipe(\r\n    publish(\r\n      exercise$ => merge(\r\n        exercise$.pipe(packType(types.EXERCISE)),\r\n        exercise$.pipe(\r\n          switchMap(exercise => exercise.getResult(parsedMessages$)),\r\n          first(),\r\n          packType(types.RESULT),\r\n        )\r\n      )\r\n    ),\r\n    repeat(),\r\n    share(),\r\n  );\r\n\r\n  return {\r\n    allMidiInputNames$,\r\n    keyboardKeyState$,\r\n    exercise$: exercisesAndResults$.pipe(unpackOfType(types.EXERCISE)),\r\n    solutions$: exercisesAndResults$.pipe(unpackOfType(types.RESULT)),\r\n    setWakeLock: active => wakeLockSubject.next(active),\r\n    wakeLockActive$: from(wakeLockSubject),\r\n  };\r\n};\r\n","import { map } from \"rxjs/operators\";\r\nimport messageTypes from './messages';\r\n\r\nexport const parse = () => map(event => messageTypes.find(type => type.matches(event)).create(event));\r\n","import { createContext } from 'react';\r\n\r\nexport const ControllerContext = createContext(null);\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useObservable = (observable$) => {\r\n  const [lastValue, setLastValue] = useState(null);\r\n  useEffect(() => {\r\n    if (observable$) {\r\n      const subscription = observable$.subscribe(setLastValue);\r\n      return () => subscription.unsubscribe();\r\n    } \r\n  }, [observable$]);\r\n\r\n  return lastValue;\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport panelStyles from './Panel.module.css';\r\n\r\nexport const Panel = ({ children, className }) => (\r\n  <div className={classNames(panelStyles.panel, className)}>{ children }</div>\r\n);\r\n","import React, { useContext } from 'react';\r\nimport { useObservable } from '../useObservable';\r\nimport { ControllerContext } from '../controllerContext';\r\nimport { Panel } from '../uiComponents/Panel';\r\n\r\nexport const MainPanel = ({ className }) => {\r\n  const controller = useContext(ControllerContext);\r\n  const exercise = useObservable(controller.exercise$);\r\n  const lastSolution = useObservable(controller.solutions$);\r\n\r\n  return (\r\n    <Panel className={className}>\r\n      <svg\r\n        viewBox=\"0 0 160 30\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n      >\r\n        <text x=\"50%\" y=\"50%\" dominantBaseline=\"central\" textAnchor=\"middle\" style={{ fontSize: 25 }}>{exercise?.displayName}</text>\r\n        { lastSolution !== null && <rect x=\"0\" y=\"95%\" width=\"100%\" height=\"5%\" fill={lastSolution ? 'green' : 'red'} /> }\r\n      </svg>\r\n    </Panel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport range from 'lodash.range';\r\nimport sortBy from 'lodash.sortby';\r\n\r\nconst WHITE_KEY_WIDTH = 9.0444307;\r\nconst WHITE_KEY_HEIGHT = 56.66114;\r\nconst BLACK_KEY_WIDTH = 5.575;\r\nconst OCTAVE_WIDTH = 7 * WHITE_KEY_WIDTH;\r\n\r\nconst KEY_X_OFFSETS = [\r\n  0 * WHITE_KEY_WIDTH,\r\n  5.414,\r\n  1 * WHITE_KEY_WIDTH,\r\n  15.837,\r\n  2 * WHITE_KEY_WIDTH,\r\n  3 * WHITE_KEY_WIDTH,\r\n  31.859,\r\n  4 * WHITE_KEY_WIDTH,\r\n  42.282,\r\n  5 * WHITE_KEY_WIDTH,\r\n  52.705,\r\n  6 * WHITE_KEY_WIDTH,\r\n];\r\n\r\nconst PRESS_MASK_BLEND_MODE = 'hard-light';\r\nconst PRESS_MASK_COLOR = 'green';\r\n\r\nexport const Keyboard = ({ lowestKey = 21, highestKey = 108, keyState, x, y, width, height }) => (\r\n  <svg version=\"1.1\" x={x} y={y} width={width} height={height} viewBox={getViewBox(lowestKey, highestKey)} preserveAspectRatio=\"xMidYMin meet\">\r\n    <defs id=\"defs2\">\r\n      <linearGradient id=\"linearGradient3981\">\r\n        <stop id=\"stop3977\" style={{ \"stopColor\": \"#f2f2f2\", \"stopOpacity\": \"1\" }} offset=\"0\" />\r\n        <stop id=\"stop3979\" style={{ \"stopColor\": \"#cccccc\", \"stopOpacity\": \"1\" }} offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient id=\"linearGradient4915\" gradientUnits=\"userSpaceOnUse\" x1=\"107.723\" x2=\"107.723\" y1=\"131.52364\" y2=\"129.08444\" xlinkHref=\"#linearGradient3981\" />\r\n      <clipPath id=\"clipPath3812\">\r\n        <rect height=\"36.348648\" id=\"rect3814\" style={{ \"display\": \"inline\", \"opacity\": \"0.17105264\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" x=\"107.723\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <clipPath id=\"clipPath3973\">\r\n        <rect height=\"56.66114\" id=\"rect3975\" style={{ \"display\": \"inline\", \"fill\": \"#808000\", \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"102.62053\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <g id=\"whiteKey\" transform=\"translate(-102.62054,-125.41296)\">\r\n        <rect height=\"56.66114\" id=\"rect3912-3-8\" style={{ \"display\": \"inline\", \"fill\": \"#1a1a1a\", \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"102.62054\" y=\"125.41296\" />\r\n        <rect height=\"56.472153\" id=\"rect3912\" style={{ \"display\": \"inline\", \"fill\": \"#666666\", \"strokeWidth\": \"0.26075235\" }} width=\"8.8138103\" x=\"102.73585\" y=\"125.41296\" />\r\n        <rect height=\"58.599155\" id=\"rect3912-2\" style={{ \"display\": \"inline\", \"fill\": \"url(#linearGradient4915)\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.26452145\" }} width=\"8.7103424\" clipPath=\"url(#clipPath3973)\" rx=\"0.2\" ry=\"0.2\" transform=\"matrix(0.96598043,0,0,0.99499097,3.6446156,0.62819669)\" x=\"102.78758\" y=\"123.2748\" />\r\n      </g>\r\n      <rect height=\"56.66114\" id=\"whiteKeyPressMask\" style={{ \"display\": \"inline\", \"fill\": PRESS_MASK_COLOR, \"mixBlendMode\": PRESS_MASK_BLEND_MODE, \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"0\" y=\"0\" />\r\n      <linearGradient id=\"linearGradient3883\">\r\n        <stop id=\"stop3879\" style={{ \"stopColor\": \"#000000\", \"stopOpacity\": \"1\" }} offset=\"0\" />\r\n        <stop id=\"stop3881\" style={{ \"stopColor\": \"#1a1a1a\", \"stopOpacity\": \"1\" }} offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient id=\"linearGradient3837\">\r\n        <stop id=\"stop3833\" style={{ \"stopColor\": \"#7d7d7d\", \"stopOpacity\": \"1\" }} offset=\"0\" />\r\n        <stop id=\"stop3835\" style={{ \"stopColor\": \"#b2b2b2\", \"stopOpacity\": \"1\" }} offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient id=\"linearGradient5265\" gradientUnits=\"userSpaceOnUse\" x1=\"110.46354\" x2=\"110.46354\" y1=\"145.41296\" y2=\"153.55803\" xlinkHref=\"#linearGradient3837\" />\r\n      <linearGradient id=\"linearGradient5267\" gradientUnits=\"userSpaceOnUse\" x1=\"110.3957\" x2=\"113.298\" y1=\"148.06406\" y2=\"148.33133\" xlinkHref=\"#linearGradient3883\" />\r\n      <clipPath id=\"clipPath3812\">\r\n        <rect height=\"36.348648\" id=\"rect3814\" style={{ \"display\": \"inline\", \"opacity\": \"0.17105264\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" x=\"107.723\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <clipPath id=\"clipPath3973\">\r\n        <rect height=\"56.66114\" id=\"rect3975\" style={{ \"display\": \"inline\", \"fill\": \"#808000\", \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"102.62053\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <g id=\"blackKey\" transform=\"matrix(0.99993528,0,0,1,-107.71603,-125.41296)\">\r\n        <rect height=\"36.348648\" id=\"rect5255\" style={{ \"display\": \"inline\", \"opacity\": \"1\", \"fill\": \"#4d4d4d\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" x=\"107.71603\" y=\"125.41296\" />\r\n        <rect height=\"35.657352\" id=\"rect5257\" style={{ \"fill\": \"url(#linearGradient5265)\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.23320046\" }} width=\"4.0383401\" clipPath=\"url(#clipPath3812)\" rx=\"1.5\" ry=\"1.5\" transform=\"matrix(0.99992069,0,0,1,0.0087649,0)\" x=\"108.49162\" y=\"123.00336\" />\r\n        <path id=\"path5259\" style={{ \"strokeWidth\": \"0.26458332\" }} d=\"m 112.96463,160.73864 c 0.10641,0.33021 0.19199,1.02296 0.19199,1.02296 -1.6,0 -1.79647,3.5e-4 -2.64612,4e-4 -0.84965,-5e-5 -1.04612,-4e-4 -2.64612,-4e-4 0,0 0.0856,-0.69275 0.19199,-1.02296 0.1363,-0.42296 0.22321,-0.9238 0.5654,-1.20731 0.49755,-0.4122 1.33085,-0.49564 1.88873,-0.50274 0.55788,0.007 1.39118,0.0905 1.88873,0.50274 0.34219,0.28351 0.4291,0.78435 0.5654,1.20731 z\" />\r\n        <path id=\"path5261\" style={{ \"fill\": \"url(#linearGradient5267)\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.05778855\" }} d=\"m 107.723,125.41296 h 0.49315 c 0,0 0.0205,31.37403 0,32.46519 -0.0205,1.09117 -0.49315,3.88346 -0.49315,3.88346 z m 5.575,0 h -0.49315 c 0,0 -0.0205,31.37403 0,32.46519 0.0205,1.09117 0.49315,3.88346 0.49315,3.88346 z\" />\r\n      </g>\r\n      <rect height=\"36.348648\" id=\"blackKeyPressMask\" style={{ \"display\": \"inline\", \"opacity\": \"1\", \"fill\": PRESS_MASK_COLOR, \"mixBlendMode\": PRESS_MASK_BLEND_MODE, \"fillOpacity\": \"1\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" />\r\n    </defs>\r\n    { sortBy(range(lowestKey, highestKey + 1), isBlackKey).map(keyNumber => <Key key={keyNumber} keyNumber={keyNumber} isPressed={keyState?.has(keyNumber)} />) }\r\n  </svg>\r\n);\r\n\r\nconst Key = ({ keyNumber, isPressed }) => (\r\n  <>\r\n    <use href={isBlackKey(keyNumber) ? '#blackKey' : '#whiteKey'} x={getXOffsetForKey(keyNumber)} />\r\n    { isPressed && <use href={isBlackKey(keyNumber) ? '#blackKeyPressMask' : '#whiteKeyPressMask'} x={getXOffsetForKey(keyNumber)} /> }\r\n  </>\r\n);\r\n\r\nconst isBlackKey = keyNumber => [1, 3, 6, 8, 10].includes(keyNumber % 12);\r\n\r\nconst getXOffsetForKey = keyNumber => Math.floor(keyNumber / 12) * OCTAVE_WIDTH + KEY_X_OFFSETS[keyNumber % 12];\r\n\r\nconst getViewBox = (lowestKey, highestKey) => {\r\n  const x = getXOffsetForKey(lowestKey);\r\n  const y = 0;\r\n  const width = getXOffsetForKey(highestKey) - getXOffsetForKey(lowestKey) + (isBlackKey(highestKey) ? BLACK_KEY_WIDTH : WHITE_KEY_WIDTH);\r\n  const height = WHITE_KEY_HEIGHT;\r\n\r\n  return `${x} ${y} ${width} ${height}`; \r\n};","import React, { useContext } from 'react';\r\nimport { ControllerContext } from '../controllerContext';\r\nimport { useObservable } from '../useObservable';\r\nimport { Keyboard } from '../Keyboard';\r\nimport { Panel } from '../uiComponents/Panel';\r\n\r\nexport const KeyboardPanel = ({ className }) => {\r\n  const controller = useContext(ControllerContext);\r\n  const keyboardKeyState = useObservable(controller.keyboardKeyState$);\r\n\r\n  return (\r\n    <Panel className={className}>\r\n      <Keyboard keyState={keyboardKeyState} />\r\n    </Panel>\r\n  )\r\n};\r\n","import React from 'react';\nimport classNames from 'classnames';\nimport styles from './Switch.module.css';\n\nexport const Switch = ({ label, checked, onChange }) => (\n  <label className={classNames(styles.switch, { [styles.checked]: checked })}>\n    {label}\n    <input type=\"checkbox\" checked={checked} onChange={e => onChange(e.target.checked)} />\n  </label>\n);\n","import React, { useContext } from 'react';\r\nimport classNames from 'classnames';\r\nimport { Panel } from '../uiComponents/Panel';\r\nimport { ControllerContext } from '../controllerContext';\r\nimport { useObservable } from '../useObservable';\r\nimport { Switch } from '../uiComponents/Switch';\r\nimport styles from './StatusPanel.module.css';\r\n\r\nexport const StatusPanel = ({ className }) => {\r\n  const controller = useContext(ControllerContext);\r\n  const midiInputNames = useObservable(controller.allMidiInputNames$);\r\n  const wakeLockActive = useObservable(controller.wakeLockActive$);\r\n\r\n  return (\r\n    <Panel className={classNames(className, styles.statusPanel)}>\r\n      <div className={styles.midiInputs}>Connected MIDI input(s): { midiInputNames?.length ? midiInputNames.join(', ') : <i>none</i> }</div>\r\n      <div className={styles.wakeLock}><Switch label=\"wake locked\" checked={!!wakeLockActive} onChange={controller.setWakeLock} /></div>\r\n    </Panel>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useNewTrainerController } from './useNewTrainerController';\r\nimport styles from './App.module.css';\r\nimport { ControllerContext } from './controllerContext';\r\nimport { MainPanel } from './panels/MainPanel';\r\nimport { KeyboardPanel } from './panels/KeyboardPanel';\r\nimport { StatusPanel } from './panels/StatusPanel';\r\n\r\nconst App = () => {\r\n  const controller = useNewTrainerController();\r\n\r\n  return controller && (\r\n    <ControllerContext.Provider value={controller}>\r\n      <div className={styles.app}>\r\n        <StatusPanel className={styles.status} />\r\n        <div className={styles.middleRow}>\r\n          <MainPanel className={styles.main} />\r\n        </div>\r\n        <KeyboardPanel className={styles.keyboard} />\r\n      </div>\r\n    </ControllerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\nimport * as TrainerController from './TrainerController';\r\n\r\nexport const useNewTrainerController = () => {\r\n  const [controller, setController] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const createdController = TrainerController.create();\r\n    setController(createdController);\r\n  }, []);\r\n\r\n  return controller;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}