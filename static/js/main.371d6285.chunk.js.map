{"version":3,"sources":["midi/midi$.js","midi/messages/properties.js","midi/messages/createMessageDefinition.js","midi/messages/noteOffMIDIMessage.js","midi/messages/noteOnMIDIMessage.js","midi/messages/unknownMIDIMessage.js","midi/messages/controlChangeMIDIMessage.js","midi/messages/programChangeMIDIMessage.js","midi/messages/pitchBendChangeMIDIMessage.js","midi/messages/index.js","midi/pressedKeys.js","midi/onlyMessageTypes.js","typedPackets.js","exercises/chords.js","intervals.js","TrainerController.js","midi/parse.js","useObservable.js","Keyboard.js","App.js","useTrainerController.js","serviceWorker.js","index.js"],"names":["midi$","Observable","create","subscriber","navigator","requestMIDIAccess","then","midiAccess","inputs","size","onmidimessage","event","next","error","pipe","share","channel","get","this","data","key","velocity","createMessageDefinition","displayName","properties","matcher","type","Symbol","matches","Object","assign","toString","keys","map","propName","join","createPrototype","value","writable","noteOffMIDIMessage","noteOnMIDIMessage","unknownMIDIMessage","status","data1","data2","controlChangeMIDIMessage","controller","programChangeMIDIMessage","patch","pitchBendChangeMIDIMessage","pressedKeys","observable$","messageTypes","filter","message","includes","onlyMessageTypes","scan","acc","add","delete","sort","OrderedSet","packType","unpackOfType","p","NOTE_NAMES","CHORD_TYPES","note","i","getChordNotes","rootNote","intervals","interval","getChordNotesRelativeToFirstNote","chord","chordNote","first","types","EXERCISE","RESULT","noSleep","NoSleep","wakeLockSubject","BehaviorSubject","subscribe","shouldBeLocked","enable","disable","parsedMessages$","find","keyboardKeyState$","exercisesAndResults$","defer","of","random","sample","getDisplayName","chordIntervalsFromRoot","List","chordNotes","getResult","flatMap","some","index","slice","isSuperset","createExercise","publish","exercise$","merge","switchMap","exercise","repeat","solutions$","onToggleWakeLock","current","wakeLockActive$","from","useObservable","useState","lastValue","setLastValue","useEffect","subscription","unsubscribe","KEY_X_OFFSETS","Keyboard","lowestKey","highestKey","keyState","x","y","width","height","version","viewBox","getViewBox","preserveAspectRatio","id","style","offset","gradientUnits","x1","x2","y1","y2","xlinkHref","transform","clipPath","rx","ry","d","sortBy","range","isBlackKey","keyNumber","isPressed","has","Key","href","getXOffsetForKey","Math","floor","App","trainerController","setController","createdController","TrainerController","useTrainerController","keyboardKeyState","Set","lastSolution","isWakeLockActive","onClick","backgroundColor","in","stdDeviation","dx","dy","result","slope","fill","stroke","strokeWidth","dominantBaseline","textAnchor","fontSize","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.371d6285.chunk.js","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\n\r\nexport const midi$ = Observable.create((subscriber) => {\r\n  \r\n  const onMIDISuccess = midiAccess => {\r\n    if (midiAccess.inputs.size === 0) {\r\n      subscriber.error('No MIDI inputs available');\r\n      return;\r\n    }\r\n\r\n    for(let [, input] of midiAccess.inputs) {\r\n      input.onmidimessage = event => {\r\n        subscriber.next(event);\r\n      }\r\n    }\r\n  };\r\n\r\n  navigator.requestMIDIAccess().then(onMIDISuccess, subscriber.error);\r\n\r\n}).pipe(share());","export const status = ({\r\n  get() {\r\n    return this.event.data[0];\r\n  },\r\n});\r\n\r\nexport const data1 = ({\r\n  get() {\r\n    return this.event.data[1];\r\n  },\r\n});\r\n\r\nexport const data2 = ({\r\n  get() {\r\n    return this.event.data[2];\r\n  },\r\n});\r\n\r\nexport const channel = ({\r\n  get() {\r\n    return (this.event.data[0] & 0b00001111) + 1;\r\n  },\r\n});\r\n\r\nexport const key = ({\r\n  get() {\r\n    return this.event.data[1] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const velocity = ({\r\n  get() {\r\n    return this.event.data[2] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const controller = ({\r\n  get() {\r\n    return this.event.data[1] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const value = ({\r\n  get() {\r\n    return this.event.data[2] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const patch = ({\r\n  get() {\r\n    return this.event.data[1] & 0b01111111;\r\n  },\r\n});\r\n\r\nexport const pitchBendValue = ({\r\n  get() {\r\n    return (this.event.data[1] & 0b01111111) | ((this.event.data[2] & 0b01111111) << 7);\r\n  },\r\n});\r\n","const createPrototype = (properties, displayName, type) => Object.assign(\r\n  Object.create(null, properties), {\r\n    type,\r\n    toString() {\r\n      return `${displayName} MIDI message (${Object.keys(properties).map(propName => `${propName}: ${this[propName]}`).join(', ')})`;\r\n    },\r\n  }\r\n);\r\n\r\nexport const createMessageDefinition = ({ displayName, properties, matcher }) => {\r\n  const type = Symbol(displayName);\r\n  return ({\r\n    type,\r\n    matches: matcher,\r\n    create: event => Object.create(createPrototype(properties, displayName, type), { event: { value: event, writable: false } }),\r\n  });\r\n};","import { channel, key, velocity } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const noteOffMIDIMessage = createMessageDefinition({\r\n  displayName: 'Note Off',\r\n  properties: { channel, key, velocity },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b10000000,\r\n});\r\n","import { channel, key, velocity } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const noteOnMIDIMessage = createMessageDefinition({\r\n  displayName: 'Note On',\r\n  properties: { channel, key, velocity },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b10010000,\r\n});\r\n","import { status, data1, data2 } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const unknownMIDIMessage = createMessageDefinition({\r\n  displayName: 'Unknown',\r\n  properties: { status, data1, data2 },\r\n  matcher: () => true,\r\n});\r\n","import { channel, controller, value } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const controlChangeMIDIMessage = createMessageDefinition({\r\n  displayName: 'Control Change',\r\n  properties: { channel, controller, value },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b10110000,\r\n});\r\n","import { channel, patch } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const programChangeMIDIMessage = createMessageDefinition({\r\n  displayName: 'Program Change',\r\n  properties: { channel, patch },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b11000000,\r\n});\r\n","import { channel, pitchBendValue } from './properties';\r\nimport { createMessageDefinition } from './createMessageDefinition';\r\n\r\nexport const pitchBendChangeMIDIMessage = createMessageDefinition({\r\n  displayName: 'Pitch Bend Change',\r\n  properties: { channel, value: pitchBendValue },\r\n  matcher: event => (event.data[0] & 0b11110000) === 0b11100000,\r\n});\r\n","import { noteOffMIDIMessage } from './noteOffMIDIMessage';\r\nimport { noteOnMIDIMessage } from './noteOnMIDIMessage';\r\nimport { unknownMIDIMessage } from './unknownMIDIMessage';\r\nimport { controlChangeMIDIMessage } from './controlChangeMIDIMessage';\r\nimport { programChangeMIDIMessage } from './programChangeMIDIMessage';\r\nimport { pitchBendChangeMIDIMessage } from './pitchBendChangeMIDIMessage';\r\n\r\nexport default [\r\n  noteOffMIDIMessage,\r\n  noteOnMIDIMessage,\r\n  controlChangeMIDIMessage,\r\n  programChangeMIDIMessage,\r\n  pitchBendChangeMIDIMessage,\r\n  unknownMIDIMessage,\r\n];\r\n","import { scan } from 'rxjs/operators';\r\nimport { OrderedSet } from 'immutable';\r\nimport { noteOnMIDIMessage } from './messages/noteOnMIDIMessage';\r\nimport { noteOffMIDIMessage } from './messages/noteOffMIDIMessage';\r\nimport { onlyMessageTypes } from './onlyMessageTypes';\r\n\r\nexport const pressedKeys = () => observable$ => observable$.pipe(\r\n  onlyMessageTypes(noteOnMIDIMessage.type, noteOffMIDIMessage.type),  \r\n  scan(\r\n    (acc, message) => (message.type === noteOnMIDIMessage.type && message.velocity\r\n      ? acc.add(message.key)\r\n      : acc.delete(message.key)\r\n    ).sort(),\r\n    OrderedSet(),\r\n  ),\r\n);","import { filter } from 'rxjs/operators';\r\n\r\nexport const onlyMessageTypes = (...messageTypes) => filter(message => messageTypes.includes(message.type));","import { map, filter } from \"rxjs/operators\";\r\n\r\nexport const packType = type => map(value => ({ type, value }));\r\n\r\nexport const unpackOfType = type => observable$ => observable$.pipe(\r\n  filter(p => p.type === type),\r\n  map(p => p.value),\r\n);\r\n","import random from 'lodash.random';\r\nimport { List } from 'immutable';\r\nimport { first, flatMap } from 'rxjs/operators';\r\nimport { pressedKeys } from '../midi/pressedKeys';\r\nimport * as i from '../intervals';\r\nimport sample from 'lodash.sample';\r\n\r\nconst NOTE_NAMES = ['C', 'D♭', 'D', 'E♭', 'E', 'F', 'F♯', 'G', 'A♭', 'A', 'B♭', 'B'];\r\n\r\nconst CHORD_TYPES = [\r\n  [note => `${note}m9 (A)`, [i.MINOR_3RD, i.PERFECT_5TH, i.MINOR_7TH, i.MAJOR_9TH]],\r\n  [note => `${note}m9 (B)`, [i.MINOR_7TH, i.MAJOR_9TH, i.OCTAVE + i.MINOR_3RD, i.OCTAVE + i.PERFECT_5TH]],\r\n  [note => `${note}maj9 (A)`, [i.MAJOR_3RD, i.PERFECT_5TH, i.MAJOR_7TH, i.MAJOR_9TH]],\r\n  [note => `${note}maj9 (B)`, [i.MAJOR_7TH, i.MAJOR_9TH, i.OCTAVE + i.MAJOR_3RD, i.OCTAVE + i.PERFECT_5TH]],\r\n  [note => `${note}13 (A)`, [i.MAJOR_3RD, i.MAJOR_13TH - i.OCTAVE, i.MINOR_7TH, i.MAJOR_9TH]],\r\n  [note => `${note}13 (B)`, [i.MINOR_7TH, i.MAJOR_9TH, i.OCTAVE + i.MAJOR_3RD, i.MAJOR_13TH]],\r\n];\r\n\r\nexport const createExercise = () => {\r\n  const rootNote = random(0, 11);\r\n  const [getDisplayName, intervals] = sample(CHORD_TYPES);\r\n  const chordIntervalsFromRoot = List(intervals).sort();\r\n  const chordNotes = getChordNotes(rootNote, chordIntervalsFromRoot);\r\n  \r\n  const getResult = parsedMessages$ => parsedMessages$.pipe(\r\n    pressedKeys(),\r\n    flatMap(\r\n      keys => {\r\n        if (!keys.size) {\r\n          return [];\r\n        }\r\n        if (!chordNotes.some((chordNote, index) =>\r\n          (chordNote % 12 === keys.first() % 12) &&\r\n          getChordNotesRelativeToFirstNote(chordNotes.slice(index)).isSuperset(getChordNotesRelativeToFirstNote(keys))\r\n        )) {\r\n          return [false];\r\n        }\r\n\r\n        if (chordNotes.size === keys.size) {\r\n          return [true];\r\n        }\r\n\r\n        return [];\r\n      }\r\n    ),\r\n    first(),\r\n  );\r\n\r\n  return {\r\n    displayName: getDisplayName(NOTE_NAMES[rootNote]),\r\n    getResult,\r\n  }\r\n};\r\n\r\nconst getChordNotes = (rootNote, intervals) => intervals.map(interval => rootNote + interval);\r\n\r\nconst getChordNotesRelativeToFirstNote = chord => chord.map(chordNote => chordNote - chord.first());\r\n","export const ROOT = 0;\r\nexport const MINOR_2ND = 1;\r\nexport const MAJOR_2ND = 2;\r\nexport const MINOR_3RD = 3;\r\nexport const MAJOR_3RD = 4;\r\nexport const PERFECT_4TH = 5;\r\nexport const AUGMENTED_4TH = 6;\r\nexport const DIMINISHED_5TH = 6;\r\nexport const PERFECT_5TH = 7;\r\nexport const MINOR_6TH = 8;\r\nexport const MAJOR_6TH = 9;\r\nexport const MINOR_7TH = 10;\r\nexport const MAJOR_7TH = 11;\r\nexport const OCTAVE = 12;\r\nexport const MINOR_9TH = 13;\r\nexport const MAJOR_9TH = 14;\r\nexport const MINOR_10TH = 15;\r\nexport const MAJOR_10TH = 16;\r\nexport const PERFECT_11TH = 17;\r\nexport const AUGMENTED_11TH = 18;\r\nexport const PERFECT_12TH = 19;\r\nexport const MINOR_13TH = 20;\r\nexport const MAJOR_13TH = 21;\r\nexport const MINOR_14TH = 22;\r\nexport const MAJOR_14TH = 23;\r\nexport const DOUBLE_OCTAVE = 24;\r\n","import { midi$ } from './midi/midi$';\r\nimport { parse } from './midi/parse';\r\nimport { pressedKeys } from './midi/pressedKeys';\r\nimport { defer, of, merge, BehaviorSubject, from } from 'rxjs';\r\nimport { first, switchMap, share, repeat, publish } from 'rxjs/operators';\r\nimport NoSleep from 'nosleep.js';\r\nimport { packType, unpackOfType } from './typedPackets';\r\nimport { createExercise } from './exercises/chords';\r\n\r\nconst types = {\r\n  EXERCISE: Symbol('EXERCISE'),\r\n  RESULT: Symbol('RESULT'),\r\n};\r\n\r\nconst noSleep = new NoSleep();\r\n\r\nexport const create = () => {\r\n  const wakeLockSubject = new BehaviorSubject(false);\r\n  wakeLockSubject.subscribe((shouldBeLocked) => {\r\n    if (shouldBeLocked) {\r\n      noSleep.enable();\r\n    } else {\r\n      noSleep.disable();\r\n    }\r\n  })\r\n\r\n  const parsedMessages$ = midi$.pipe(parse());\r\n  const keyboardKeyState$ = parsedMessages$.pipe(pressedKeys());\r\n\r\n  const singleExercise$ = defer(() => of(createExercise()));\r\n  const exercisesAndResults$ = singleExercise$.pipe(\r\n    publish(\r\n      exercise$ => merge(\r\n        exercise$.pipe(packType(types.EXERCISE)),\r\n        exercise$.pipe(\r\n          switchMap(exercise => exercise.getResult(parsedMessages$)),\r\n          first(),\r\n          packType(types.RESULT),\r\n        )\r\n      )\r\n    ),\r\n    repeat(),\r\n    share(),\r\n  );\r\n\r\n  return {\r\n    keyboardKeyState$,\r\n    exercise$: exercisesAndResults$.pipe(unpackOfType(types.EXERCISE)),\r\n    solutions$: exercisesAndResults$.pipe(unpackOfType(types.RESULT)),\r\n    onToggleWakeLock: () => wakeLockSubject.pipe(first()).subscribe(current => wakeLockSubject.next(!current)),\r\n    wakeLockActive$: from(wakeLockSubject),\r\n  };\r\n};\r\n","import { map } from \"rxjs/operators\";\r\nimport messageTypes from './messages';\r\n\r\nexport const parse = () => map(event => messageTypes.find(type => type.matches(event)).create(event));\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport const useObservable = (observable$) => {\r\n  const [lastValue, setLastValue] = useState(null);\r\n  useEffect(() => {\r\n    if (observable$) {\r\n      const subscription = observable$.subscribe(setLastValue);\r\n      return () => subscription.unsubscribe();\r\n    } \r\n  }, [observable$]);\r\n\r\n  return lastValue;\r\n};\r\n","import React from 'react';\r\nimport range from 'lodash.range';\r\nimport sortBy from 'lodash.sortby';\r\n\r\nconst WHITE_KEY_WIDTH = 9.0444307;\r\nconst WHITE_KEY_HEIGHT = 56.66114;\r\nconst BLACK_KEY_WIDTH = 5.575;\r\nconst OCTAVE_WIDTH = 7 * WHITE_KEY_WIDTH;\r\n\r\nconst KEY_X_OFFSETS = [\r\n  0 * WHITE_KEY_WIDTH,\r\n  5.414,\r\n  1 * WHITE_KEY_WIDTH,\r\n  15.837,\r\n  2 * WHITE_KEY_WIDTH,\r\n  3 * WHITE_KEY_WIDTH,\r\n  31.859,\r\n  4 * WHITE_KEY_WIDTH,\r\n  42.282,\r\n  5 * WHITE_KEY_WIDTH,\r\n  52.705,\r\n  6 * WHITE_KEY_WIDTH,\r\n];\r\n\r\nconst PRESS_MASK_BLEND_MODE = 'hard-light';\r\nconst PRESS_MASK_COLOR = 'green';\r\n\r\nexport const Keyboard = ({ lowestKey = 21, highestKey = 108, keyState, x, y, width, height }) => (\r\n  <svg version=\"1.1\" x={x} y={y} width={width} height={height} viewBox={getViewBox(lowestKey, highestKey)} preserveAspectRatio=\"xMidYMin meet\">\r\n    <defs id=\"defs2\">\r\n      <linearGradient id=\"linearGradient3981\">\r\n        <stop id=\"stop3977\" style={{ \"stopColor\": \"#f2f2f2\", \"stopOpacity\": \"1\" }} offset=\"0\" />\r\n        <stop id=\"stop3979\" style={{ \"stopColor\": \"#cccccc\", \"stopOpacity\": \"1\" }} offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient id=\"linearGradient4915\" gradientUnits=\"userSpaceOnUse\" x1=\"107.723\" x2=\"107.723\" y1=\"131.52364\" y2=\"129.08444\" xlinkHref=\"#linearGradient3981\" />\r\n      <clipPath id=\"clipPath3812\">\r\n        <rect height=\"36.348648\" id=\"rect3814\" style={{ \"display\": \"inline\", \"opacity\": \"0.17105264\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" x=\"107.723\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <clipPath id=\"clipPath3973\">\r\n        <rect height=\"56.66114\" id=\"rect3975\" style={{ \"display\": \"inline\", \"fill\": \"#808000\", \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"102.62053\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <g id=\"whiteKey\" transform=\"translate(-102.62054,-125.41296)\">\r\n        <rect height=\"56.66114\" id=\"rect3912-3-8\" style={{ \"display\": \"inline\", \"fill\": \"#1a1a1a\", \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"102.62054\" y=\"125.41296\" />\r\n        <rect height=\"56.472153\" id=\"rect3912\" style={{ \"display\": \"inline\", \"fill\": \"#666666\", \"strokeWidth\": \"0.26075235\" }} width=\"8.8138103\" x=\"102.73585\" y=\"125.41296\" />\r\n        <rect height=\"58.599155\" id=\"rect3912-2\" style={{ \"display\": \"inline\", \"fill\": \"url(#linearGradient4915)\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.26452145\" }} width=\"8.7103424\" clipPath=\"url(#clipPath3973)\" rx=\"0.2\" ry=\"0.2\" transform=\"matrix(0.96598043,0,0,0.99499097,3.6446156,0.62819669)\" x=\"102.78758\" y=\"123.2748\" />\r\n      </g>\r\n      <rect height=\"56.66114\" id=\"whiteKeyPressMask\" style={{ \"display\": \"inline\", \"fill\": PRESS_MASK_COLOR, \"mixBlendMode\": PRESS_MASK_BLEND_MODE, \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"0\" y=\"0\" />\r\n      <linearGradient id=\"linearGradient3883\">\r\n        <stop id=\"stop3879\" style={{ \"stopColor\": \"#000000\", \"stopOpacity\": \"1\" }} offset=\"0\" />\r\n        <stop id=\"stop3881\" style={{ \"stopColor\": \"#1a1a1a\", \"stopOpacity\": \"1\" }} offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient id=\"linearGradient3837\">\r\n        <stop id=\"stop3833\" style={{ \"stopColor\": \"#7d7d7d\", \"stopOpacity\": \"1\" }} offset=\"0\" />\r\n        <stop id=\"stop3835\" style={{ \"stopColor\": \"#b2b2b2\", \"stopOpacity\": \"1\" }} offset=\"1\" />\r\n      </linearGradient>\r\n      <linearGradient id=\"linearGradient5265\" gradientUnits=\"userSpaceOnUse\" x1=\"110.46354\" x2=\"110.46354\" y1=\"145.41296\" y2=\"153.55803\" xlinkHref=\"#linearGradient3837\" />\r\n      <linearGradient id=\"linearGradient5267\" gradientUnits=\"userSpaceOnUse\" x1=\"110.3957\" x2=\"113.298\" y1=\"148.06406\" y2=\"148.33133\" xlinkHref=\"#linearGradient3883\" />\r\n      <clipPath id=\"clipPath3812\">\r\n        <rect height=\"36.348648\" id=\"rect3814\" style={{ \"display\": \"inline\", \"opacity\": \"0.17105264\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" x=\"107.723\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <clipPath id=\"clipPath3973\">\r\n        <rect height=\"56.66114\" id=\"rect3975\" style={{ \"display\": \"inline\", \"fill\": \"#808000\", \"strokeWidth\": \"0.26458332\" }} width=\"9.0444307\" x=\"102.62053\" y=\"125.41296\" />\r\n      </clipPath>\r\n      <g id=\"blackKey\" transform=\"matrix(0.99993528,0,0,1,-107.71603,-125.41296)\">\r\n        <rect height=\"36.348648\" id=\"rect5255\" style={{ \"display\": \"inline\", \"opacity\": \"1\", \"fill\": \"#4d4d4d\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" x=\"107.71603\" y=\"125.41296\" />\r\n        <rect height=\"35.657352\" id=\"rect5257\" style={{ \"fill\": \"url(#linearGradient5265)\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.23320046\" }} width=\"4.0383401\" clipPath=\"url(#clipPath3812)\" rx=\"1.5\" ry=\"1.5\" transform=\"matrix(0.99992069,0,0,1,0.0087649,0)\" x=\"108.49162\" y=\"123.00336\" />\r\n        <path id=\"path5259\" style={{ \"strokeWidth\": \"0.26458332\" }} d=\"m 112.96463,160.73864 c 0.10641,0.33021 0.19199,1.02296 0.19199,1.02296 -1.6,0 -1.79647,3.5e-4 -2.64612,4e-4 -0.84965,-5e-5 -1.04612,-4e-4 -2.64612,-4e-4 0,0 0.0856,-0.69275 0.19199,-1.02296 0.1363,-0.42296 0.22321,-0.9238 0.5654,-1.20731 0.49755,-0.4122 1.33085,-0.49564 1.88873,-0.50274 0.55788,0.007 1.39118,0.0905 1.88873,0.50274 0.34219,0.28351 0.4291,0.78435 0.5654,1.20731 z\" />\r\n        <path id=\"path5261\" style={{ \"fill\": \"url(#linearGradient5267)\", \"fillOpacity\": \"1\", \"strokeWidth\": \"0.05778855\" }} d=\"m 107.723,125.41296 h 0.49315 c 0,0 0.0205,31.37403 0,32.46519 -0.0205,1.09117 -0.49315,3.88346 -0.49315,3.88346 z m 5.575,0 h -0.49315 c 0,0 -0.0205,31.37403 0,32.46519 0.0205,1.09117 0.49315,3.88346 0.49315,3.88346 z\" />\r\n      </g>\r\n      <rect height=\"36.348648\" id=\"blackKeyPressMask\" style={{ \"display\": \"inline\", \"opacity\": \"1\", \"fill\": PRESS_MASK_COLOR, \"mixBlendMode\": PRESS_MASK_BLEND_MODE, \"fillOpacity\": \"1\", \"strokeWidth\": \"0.26458332\" }} width=\"5.57514\" />\r\n    </defs>\r\n    { sortBy(range(lowestKey, highestKey + 1), isBlackKey).map(keyNumber => <Key key={keyNumber} keyNumber={keyNumber} isPressed={keyState.has(keyNumber)} />) }\r\n  </svg>\r\n);\r\n\r\nconst Key = ({ keyNumber, isPressed }) => (\r\n  <>\r\n    <use href={isBlackKey(keyNumber) ? '#blackKey' : '#whiteKey'} x={getXOffsetForKey(keyNumber)} />\r\n    { isPressed && <use href={isBlackKey(keyNumber) ? '#blackKeyPressMask' : '#whiteKeyPressMask'} x={getXOffsetForKey(keyNumber)} /> }\r\n  </>\r\n);\r\n\r\nconst isBlackKey = keyNumber => [1, 3, 6, 8, 10].includes(keyNumber % 12);\r\n\r\nconst getXOffsetForKey = keyNumber => Math.floor(keyNumber / 12) * OCTAVE_WIDTH + KEY_X_OFFSETS[keyNumber % 12];\r\n\r\nconst getViewBox = (lowestKey, highestKey) => {\r\n  const x = getXOffsetForKey(lowestKey);\r\n  const y = 0;\r\n  const width = getXOffsetForKey(highestKey) - getXOffsetForKey(lowestKey) + (isBlackKey(highestKey) ? BLACK_KEY_WIDTH : WHITE_KEY_WIDTH);\r\n  const height = WHITE_KEY_HEIGHT;\r\n\r\n  return `${x} ${y} ${width} ${height}`; \r\n};","import React from 'react';\r\nimport { useTrainerController } from './useTrainerController';\r\nimport { useObservable } from './useObservable';\r\nimport { Keyboard } from './Keyboard';\r\nimport './App.css';\r\nimport { Set } from 'immutable';\r\n\r\nconst App = () => {\r\n  const trainerController = useTrainerController();\r\n  const keyboardKeyState = useObservable(trainerController?.keyboardKeyState$) || Set();\r\n  const exercise = useObservable(trainerController?.exercise$);\r\n  const lastSolution = useObservable(trainerController?.solutions$);\r\n  const isWakeLockActive = useObservable(trainerController?.wakeLockActive$);\r\n\r\n  return trainerController && (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 160 90\"\r\n      preserveAspectRatio=\"xMidYMid meet\"\r\n      onClick={trainerController.onToggleWakeLock}\r\n      style={{\r\n        backgroundColor: isWakeLockActive ? 'hsl(120, 5%, 30%)' : 'hsl(120, 5%, 60%)',\r\n      }}>\r\n      <filter id=\"dropShadow\" height=\"130%\">\r\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1\"/>\r\n        <feOffset dx=\"1\" dy=\"1\" result=\"offsetblur\"/>\r\n        <feComponentTransfer>\r\n          <feFuncA type=\"linear\" slope=\"0.5\"/>\r\n        </feComponentTransfer>\r\n        <feMerge> \r\n          <feMergeNode/>\r\n          <feMergeNode in=\"SourceGraphic\"/>\r\n        </feMerge>\r\n      </filter>\r\n      <rect x=\"5%\" y=\"5%\" width=\"90%\" height=\"90%\" fill=\"white\" stroke=\"black\" strokeWidth=\"0.1\" style={{ filter: 'url(#dropShadow)' }} />\r\n      <svg x=\"6%\" y=\"6%\" width=\"88%\" height=\"88%\">\r\n        <Keyboard keyState={keyboardKeyState} x=\"0%\" y=\"0%\" width=\"100%\" />\r\n        <text x=\"50%\" y=\"50%\" dominantBaseline=\"central\" textAnchor=\"middle\" style={{ fontSize: 25 }}>{exercise?.displayName}</text>\r\n        { lastSolution !== null && <rect x=\"0\" y=\"95%\" width=\"100%\" height=\"5%\" fill={lastSolution ? 'green' : 'red'} /> }\r\n      </svg>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useEffect, useState } from 'react';\r\nimport * as TrainerController from './TrainerController';\r\n\r\nexport const useTrainerController = () => {\r\n  const [controller, setController] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const createdController = TrainerController.create();\r\n    setController(createdController);\r\n  }, []);\r\n\r\n  return controller;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}